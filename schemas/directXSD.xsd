<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="person">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="firstname">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:pattern value="[a-zA-Z]+"/>
              <xs:minLength value="2"/>
              <xs:maxLength value="15"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="age">
          <xs:simpleType>
            <xs:restriction base="xs:integer">
              <xs:minInclusive value="0"/>
              <xs:maxInclusive value="120"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="address">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="street" type="xs:string"/>
              <xs:element name="city" type="xs:string"/>
              <xs:element name="state" type="xs:string"/>
              <xs:element name="zip" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="phone">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:pattern value="\d{3}-\d{3}-\d{4}"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="team">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="Blue"/>
              <xs:enumeration value="Red"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="id" type="xs:string" use="required"/>
      <xs:attribute name="id2" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="Customer">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Dob" type="xs:date" />
        <xs:element name="Address">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Line1" type="xs:string" />
              <xs:element name="Line2" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="Supplier">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Phone" type="xs:integer" />
        <xs:element name="Address2">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Line1" type="xs:string" />
              <xs:element name="Line2" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="items"> <!-- root element will be <items> -->
      <xs:complexType> <!-- it will be complex (there are complex and simple) -->
          <xs:sequence> <!-- it will consists from sequence of other elements -->
              <xs:element name="item" minOccurs="0" maxOccurs="unbounded"> <!-- there will be zero or more <item> elements in sequence -->
                  <xs:complexType> <!-- they all have complex type -->
                      <xs:sequence> <!-- each of them will have next sequence of elements -->
                          <xs:element name="name" type="NonEmptyString" minOccurs="1"/> <!-- required (minOccurs="1") non empty (look for NonEmptyString at bottom) name field -->
                          <xs:element name="photo" minOccurs="1"> <!-- required photo with given pattern to validate urls for images -->
                              <xs:simpleType> <!-- this is example how to use additional restrictions for elements -->
                                  <xs:restriction base="xs:anyURI">
                                      <xs:minLength value="1" />
                                      <xs:pattern value="http://.*(png|jpg|jpeg|gif)" />
                                  </xs:restriction>
                              </xs:simpleType>
                          </xs:element>
                          <xs:element name="tags" type="NonEmptyString" minOccurs="1"/>
                          <xs:element name="diameter" type="xs:positiveInteger" minOccurs="1"/>
                          <xs:element name="weight" type="xs:positiveInteger" minOccurs="1"/>
                          <xs:element name="price" type="positiveDecimal" minOccurs="1"/>
                          <xs:element name="size" minOccurs="0" default=""> <!-- example of enum field -->
                              <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                      <xs:enumeration value=""/>
                                      <xs:enumeration value="Big"/>
                                      <xs:enumeration value="Small"/>
                                  </xs:restriction>
                              </xs:simpleType>
                          </xs:element>
                      </xs:sequence>
                  </xs:complexType>
              </xs:element>
          </xs:sequence>
      </xs:complexType>
  </xs:element>
  <xs:simpleType name="positiveDecimal">
      <xs:restriction base="xs:decimal">
          <xs:minExclusive value="0"/>
          <xs:fractionDigits value="2"/>
      </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NonEmptyString"> <!-- we can describe our types separately to reuse them later -->
      <xs:restriction base="xs:string">
          <xs:minLength value="1" />
          <xs:pattern value=".*[^\s].*" />
      </xs:restriction>
  </xs:simpleType>
</xs:schema>